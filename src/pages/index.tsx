import type { NextPage } from "next";
import Head from "next/head";
import TypeSelector from "../components/TypeSelector";

export async function getStaticProps({ locale }: { locale: string }) {
  const data = await import(`../../data/data.${locale}.json`);

  return {
    props: {
      ...data.default,
    },
  }
}

interface HomeProps {
  types: Record<number,{
    id: number,
    name: string,
  }>,
  efficacies: Record<number, {
    id: number,
    damage: Record<number, number>
  }>
}


const Home: NextPage<HomeProps> = ({ types, efficacies }) => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Pokemon Type Match Ups
        </h1>

        <TypeSelector />
        {Object.values(types).map(type => (
          <div className="mb-20" key={type.id}>
            {type.name}
            <div>
                {Object.values(types).map(type2 => (
                  <div key={type2.id}>
                    {type2.name} - {JSON.stringify(efficacies[type.id]?.damage[type2.id] ?? 0)}
                  </div> 
                ))}
            </div>
          </div>
        ))}
      </main>
    </>
  );
};

export default Home;
